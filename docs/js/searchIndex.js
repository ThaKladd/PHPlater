Search.appendIndex(
    [
                {
            "fqsen": "\\PHPlater",
            "name": "PHPlater",
            "summary": "The\u0020PHPlater\u0020class,\u0020a\u0020simple\u0020template\u0020engine.",
            "url": "classes/PHPlater.html"
        },                {
            "fqsen": "\\PHPlater\u003A\u003A__construct\u0028\u0029",
            "name": "__construct",
            "summary": "",
            "url": "classes/PHPlater.html#method___construct"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AgetSet\u0028\u0029",
            "name": "getSet",
            "summary": "Quick\u0020shortcut\u0020for\u0020getting\u0020and\u0020setting\u0020data\u0020inside\u0020current\u0020object",
            "url": "classes/PHPlater.html#method_getSet"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Acontentify\u0028\u0029",
            "name": "contentify",
            "summary": "Will\u0020manage\u0020the\u0020content\u0020so\u0020that\u0020it\u0020is\u0020a\u0020string\u0020when\u0020stored\u0020into\u0020data",
            "url": "classes/PHPlater.html#method_contentify"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AifJsonToArray\u0028\u0029",
            "name": "ifJsonToArray",
            "summary": "Will\u0020manage\u0020the\u0020input\u0020so\u0020that\u0020if\u0020it\u0020is\u0020json\u0020it\u0020converted\u0020to\u0020an\u0020array,\u0020otherwise\u0020input\u0020is\u0020returned",
            "url": "classes/PHPlater.html#method_ifJsonToArray"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Aresult\u0028\u0029",
            "name": "result",
            "summary": "Stores\u0020the\u0020result\u0020of\u0020the\u0020variable\u0020to\u0020value\u0020change\u0020in\u0020template\u0020for\u0020each\u0020run",
            "url": "classes/PHPlater.html#method_result"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Atags\u0028\u0029",
            "name": "tags",
            "summary": "Set\u0020both\u0020template\u0020tags\u0020in\u0020one\u0020method",
            "url": "classes/PHPlater.html#method_tags"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AtagsList\u0028\u0029",
            "name": "tagsList",
            "summary": "Set\u0020both\u0020list\u0020tags\u0020in\u0020one\u0020method",
            "url": "classes/PHPlater.html#method_tagsList"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AtagsConditional\u0028\u0029",
            "name": "tagsConditional",
            "summary": "Set\u0020both\u0020conditional\u0020tags\u0020in\u0020one\u0020method",
            "url": "classes/PHPlater.html#method_tagsConditional"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AtagConditionalBefore\u0028\u0029",
            "name": "tagConditionalBefore",
            "summary": "Set\u0020or\u0020get\u0020start\u0020conditional\u0020tag",
            "url": "classes/PHPlater.html#method_tagConditionalBefore"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AtagConditionalAfter\u0028\u0029",
            "name": "tagConditionalAfter",
            "summary": "Set\u0020or\u0020get\u0020end\u0020conditional\u0020tag",
            "url": "classes/PHPlater.html#method_tagConditionalAfter"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AtagListBefore\u0028\u0029",
            "name": "tagListBefore",
            "summary": "Set\u0020or\u0020get\u0020start\u0020list\u0020tag",
            "url": "classes/PHPlater.html#method_tagListBefore"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AtagListAfter\u0028\u0029",
            "name": "tagListAfter",
            "summary": "Set\u0020or\u0020get\u0020end\u0020list\u0020tag",
            "url": "classes/PHPlater.html#method_tagListAfter"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AtagBefore\u0028\u0029",
            "name": "tagBefore",
            "summary": "Set\u0020or\u0020get\u0020start\u0020template\u0020tag",
            "url": "classes/PHPlater.html#method_tagBefore"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AtagAfter\u0028\u0029",
            "name": "tagAfter",
            "summary": "Set\u0020or\u0020get\u0020end\u0020template\u0020tag",
            "url": "classes/PHPlater.html#method_tagAfter"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AconditionalSeparators\u0028\u0029",
            "name": "conditionalSeparators",
            "summary": "Set\u0020both\u0020if\u0020and\u0020else\u0020tags\u0020in\u0020one\u0020method",
            "url": "classes/PHPlater.html#method_conditionalSeparators"
        },                {
            "fqsen": "\\PHPlater\u003A\u003ApregDelimiter\u0028\u0029",
            "name": "pregDelimiter",
            "summary": "Set\u0020or\u0020get\u0020preg\u0028regex\u0029\u0020delimiter",
            "url": "classes/PHPlater.html#method_pregDelimiter"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Adelimiter\u0028\u0029",
            "name": "delimiter",
            "summary": "",
            "url": "classes/PHPlater.html#method_delimiter"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AfilterSeperator\u0028\u0029",
            "name": "filterSeperator",
            "summary": "Set\u0020or\u0020get\u0020filter\u0020separator",
            "url": "classes/PHPlater.html#method_filterSeperator"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AchainSeperator\u0028\u0029",
            "name": "chainSeperator",
            "summary": "Set\u0020or\u0020get\u0020chain\u0020separator",
            "url": "classes/PHPlater.html#method_chainSeperator"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AargumentSeperator\u0028\u0029",
            "name": "argumentSeperator",
            "summary": "Set\u0020or\u0020get\u0020argument\u0020separator",
            "url": "classes/PHPlater.html#method_argumentSeperator"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AifSeperator\u0028\u0029",
            "name": "ifSeperator",
            "summary": "Set\u0020or\u0020get\u0020if\u0020separator\nDefault\u0020is\u0020\u003F\u003F",
            "url": "classes/PHPlater.html#method_ifSeperator"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AelseSeperator\u0028\u0029",
            "name": "elseSeperator",
            "summary": "Set\u0020or\u0020get\u0020else\u0020separator\nDefault\u0020is\u0020\u003A\u003A",
            "url": "classes/PHPlater.html#method_elseSeperator"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Amany\u0028\u0029",
            "name": "many",
            "summary": "If\u0020the\u0020template\u0020is\u0020to\u0020be\u0020iterated\u0020over\u0020a\u0020collection\u0020of\u0020plates,\u0020then\u0020this\u0020method\u0020has\u0020to\u0020be\u0020called\u0020with\u0020true",
            "url": "classes/PHPlater.html#method_many"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Aplates\u0028\u0029",
            "name": "plates",
            "summary": "Set\u0020or\u0020get\u0020all\u0020plates\u0020at\u0020once",
            "url": "classes/PHPlater.html#method_plates"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Acontent\u0028\u0029",
            "name": "content",
            "summary": "Set\u0020the\u0020template\u0020to\u0020act\u0020upon",
            "url": "classes/PHPlater.html#method_content"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Aplate\u0028\u0029",
            "name": "plate",
            "summary": "Set\u0020or\u0020get\u0020the\u0020a\u0020plate\u0020\u0028template\u0020variable\u0029",
            "url": "classes/PHPlater.html#method_plate"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Arender\u0028\u0029",
            "name": "render",
            "summary": "Run\u0020to\u0020render\u0020the\u0020template",
            "url": "classes/PHPlater.html#method_render"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Apattern\u0028\u0029",
            "name": "pattern",
            "summary": "Get\u0020the\u0020pattern\u0020used\u0020to\u0020fetch\u0020all\u0020the\u0020tags\u0020in\u0020the\u0020template",
            "url": "classes/PHPlater.html#method_pattern"
        },                {
            "fqsen": "\\PHPlater\u003A\u003ArenderList\u0028\u0029",
            "name": "renderList",
            "summary": "Render\u0020the\u0020lists\u0020in\u0020template\u0020if\u0020they\u0020are\u0020there",
            "url": "classes/PHPlater.html#method_renderList"
        },                {
            "fqsen": "\\PHPlater\u003A\u003ArenderConditional\u0028\u0029",
            "name": "renderConditional",
            "summary": "Render\u0020the\u0020conditional\u0020in\u0020template\u0020if\u0020they\u0020are\u0020there",
            "url": "classes/PHPlater.html#method_renderConditional"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AfindList\u0028\u0029",
            "name": "findList",
            "summary": "Finds\u0020the\u0020list\u0020variable\u0020and\u0020exchanges\u0020the\u0020position\u0020with\u0020the\u0020keys,\u0020and\u0020then\u0020renders\u0020the\u0020result",
            "url": "classes/PHPlater.html#method_findList"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AfindConditional\u0028\u0029",
            "name": "findConditional",
            "summary": "Finds\u0020the\u0020conditionals\u0020and\u0020exchanges\u0020the\u0020position\u0020with\u0020the\u0020rendering\u0020and\u0020subsequent\u0020evaluation\u0020of\u0020values\u0020and\u0020then\u0020renders\u0020the\u0020result",
            "url": "classes/PHPlater.html#method_findConditional"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AevaluateOperation\u0028\u0029",
            "name": "evaluateOperation",
            "summary": "Method\u0020to\u0020return\u0020value\u0020of\u0020operation\u0020when\u0020done\u0020with\u0020a\u0020matched\u0020string\u0020operand",
            "url": "classes/PHPlater.html#method_evaluateOperation"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AgetList\u0028\u0029",
            "name": "getList",
            "summary": "Finds\u0020and\u0020returns\u0020the\u0020list\u0020from\u0020the\u0020location\u0020\u005B\u0027one\u0027,\u0020\u0027two\u0027,\u0020\u0027three\u0027\u005D\u0020in\u0020plates",
            "url": "classes/PHPlater.html#method_getList"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Afind\u0028\u0029",
            "name": "find",
            "summary": "Begins\u0020with\u0020the\u0020root\u0020plated\u0020and\u0020iterates\u0020through\u0020every\u0020one\u0020and\u0020extracts\u0020the\u0020matching\u0020value",
            "url": "classes/PHPlater.html#method_find"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Afilter\u0028\u0029",
            "name": "filter",
            "summary": "Adds\u0020and\u0020gets\u0020the\u0020filter\u0020function,\u0020as\u0020well\u0020as\u0020calls\u0020it\nNote\u0020that\u0020if\u0020\u0024value\u0020is\u0020a\u0020string\u0020of\u0020a\u0020callable\u0020function\u0020it\u0020will\u0020be\u0020considered\u0020a\u0020set\u0020of\u0020the\u0020function\nOtherwise\u0020the\u0020filter\u0020function\u0020is\u0020called\u0020with\u0020\u0024value\u0020as\u0020argument",
            "url": "classes/PHPlater.html#method_filter"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AgetFiltersAndParts\u0028\u0029",
            "name": "getFiltersAndParts",
            "summary": "Helper\u0020method\u0020to\u0020separate\u0020nesting\u0020and\u0020filters",
            "url": "classes/PHPlater.html#method_getFiltersAndParts"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AgetFunctionAndArguments\u0028\u0029",
            "name": "getFunctionAndArguments",
            "summary": "Helper\u0020method\u0020to\u0020separate\u0020filter\u0020and\u0020arguments",
            "url": "classes/PHPlater.html#method_getFunctionAndArguments"
        },                {
            "fqsen": "\\PHPlater\u003A\u003Aextract\u0028\u0029",
            "name": "extract",
            "summary": "Will\u0020manage\u0020the\u0020content\u0020so\u0020that\u0020it\u0020is\u0020a\u0020string\u0020when\u0020stored\u0020into\u0020data",
            "url": "classes/PHPlater.html#method_extract"
        },                {
            "fqsen": "\\PHPlater\u003A\u003AcallFilters\u0028\u0029",
            "name": "callFilters",
            "summary": "Checks\u0020if\u0020there\u0020are\u0020filters\u0020on\u0020the\u0020plate,\u0020and\u0020applies\u0020them",
            "url": "classes/PHPlater.html#method_callFilters"
        },                {
            "fqsen": "\\PHPlater\u003A\u003A\u0024data",
            "name": "data",
            "summary": "All\u0020data\u0020is\u0020managed\u0020within\u0020this\u0020one\u0020property\u0020array.",
            "url": "classes/PHPlater.html#property_data"
        },                {
            "fqsen": "\\",
            "name": "\\",
            "summary": "",
            "url": "namespaces/default.html"
        }            ]
);
